/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.2.1/userguide/java_library_plugin.html
 */
// Using the Gradle's new plugins DSL
plugins {
	id 'java-library'
	id 'io.freefair.lombok' version '8.11' apply false// delombok [rj.added 2020.04.18]
	id 'org.sonarqube' version '6.0.1.5171' apply false	
	// id "com.diffplug.eclipse.apt" version "4.2.0"
	id 'eclipse'

	id 'org.springframework.boot' version "${springBootVersion}" apply false

	id "com.github.node-gradle.node" version "${nodeGradleVersion}" apply false
}

println "[build] Building ${rootProject}"

// [rj.added 2020.05.22] Configure subprojects centrally
subprojects {
	
	if (rootProject == project || rootProject == project.getParent()) {
		println "[build] Skipping ${project}"
		return;
	} else {
		println "[build] Configuring ${project}"
	}
	
	apply plugin: 'java-library'
	apply plugin: 'io.freefair.lombok'
	apply plugin: 'org.sonarqube'

	group = rootProject.group
	version = rootProject.version
	sourceCompatibility = 21
	
	apply from: "https://raw.githubusercontent.com/tagitmobile/tagit-core-gradle/${tagitGradleVersion}/gradle/tagit.gradle"
	apply from: "https://raw.githubusercontent.com/tagitmobile/tagit-core-gradle/${tagitGradleVersion}/gradle/publications.gradle"

	// [rj.added 2020.11.04] make certain dependencies optional based on feature variants (https://docs.gradle.org/6.4.1/userguide/feature_variants.html)
	java {
		registerFeature('mobeixSupport') {
			usingSourceSet(sourceSets.main)
		}
	}

	dependencies {

	// ####################################################################################################################################################
    // ### Tagit Core Dependencies   ###
    // ####################################################################################################################################################
    
	api platform("com.tagit.commons:tagit-core-bom:${tagitCoreVersion}")
	api "com.tagit.commons:tagit-core-starter"
    
	// ####################################################################################################################################################
    // ### Custom Dependencies   ###
    // ####################################################################################################################################################
    
	}

	test.onlyIf {
		Boolean.getBoolean('skip.tests')
	}	

}

task consolidateDependencies(type: Copy) {
	description 'Consolidates all dependencies from relevant sub-projects'
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
    def jars=[]
    subprojects.each {
		if (rootProject != it && rootProject != it.getParent()) {
			jars += it.tasks['copyDependencies']
		}
    }
    from jars
    into 'build/dependencies'
}

task consolidateJars(type: Copy) {
	description 'Consolidates all artifacts from relevant sub-projects'
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
    def jars=[]
    subprojects.each {
		if (rootProject != it && rootProject != it.getParent()) {
			consolidateJars.dependsOn("${it.path}:build")
			jars += it.tasks['copyJar']
		}
    }
    from jars
    into 'deploy'
}

javadoc { 
	exclude "**/.gitkeep"
}

defaultTasks 'clean', 'eclipse', 'build', 'consolidateJars'
